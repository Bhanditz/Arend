syntax = "proto3";

package vclang.compiled;
option java_package = "com.jetbrains.jetpad.vclang.module.caching.serialization";
option java_outer_classname = "DefinitionProtos";

import "Expression.proto";
import "Level.proto";


message Definition {
    int32 this_class_ref = 3;
    repeated ClassifyingFields classifying_field = 8;
    oneof definition_data {
        ClassData class = 5;
        DataData data = 6;
        FunctionData function = 7;
    }

    message ClassifyingFields {
        repeated int32 field_ref = 1;
    }
    message ClassData {
        FieldSet field_set = 3;
        repeated int32 super_class_ref = 4;
        map<string, Field> fields = 5;
        int32 enclosing_this_field_ref = 6;

        message Field {
            SingleParameter this_param = 1;
            Expression type = 2;
        }
    }
    message DataData {
        repeated Telescope param = 2;
        Sort sort = 7;
        map<string, Constructor> constructors = 3;
        bool matches_on_interval = 5;
        repeated bool covariant_parameter = 8;

        message Constructor {
            Patterns patterns = 1;
            repeated Telescope param = 2;
            ElimTreeNode condition = 3;

            message Patterns {
                repeated PatternArgument pattern_argument = 1;
            }
            message PatternArgument {
                bool not_explicit = 1;
                bool hidden = 2;
                Pattern pattern = 3;
            }
            message Pattern {
                oneof kind {
                    Name name = 1;
                    ConstructorRef constructor = 2;
                    AnyConstructor any_constructor = 3;
                }

                message Name {
                    SingleParameter var = 1;
                }
                message ConstructorRef {
                    int32 constructor_ref = 1;
                    Patterns patterns = 2;
                }
                message AnyConstructor {
                    SingleParameter var = 1;
                }
            }
        }
    }
    message FunctionData {
        repeated Telescope param = 2;
        Expression type = 5;
        ElimTreeNode elim_tree = 4;
    }
}
